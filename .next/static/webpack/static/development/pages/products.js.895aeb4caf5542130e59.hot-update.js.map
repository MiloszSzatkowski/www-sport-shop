{"version":3,"file":"static/webpack/static\\development\\pages\\products.js.895aeb4caf5542130e59.hot-update.js","sources":["webpack:///./pages/products.js"],"sourcesContent":["import 'react-app-polyfill/ie11';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Navigation from    '../components/Navigation';\nimport Meta_inf from      '../components/Meta_inf';\nimport the_SITE_url from  '../components/Vars';\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nvar filterIsOn = false;\n\nfunction initial_search(post){\n  for (let i = 0; i < this.gender.length; i++) {\n    if (post.acf.gender == this.gender[i]) {\n      for (let j = 0; j < this.age.length; j++) {\n          if (post.acf.age == this.age[j]) {\n            return true;\n            break;\n          }\n      }\n    }\n  }\n  return false;\n}\n\nfunction mass_replace(array_of_strings_to_replace, str, replace_with) {\n  var str = str;\n  for (var i = 0; i < array_of_strings_to_replace.length; i++) {\n    try {\n      str.replace(array_of_strings_to_replace[i], replace_with)\n    } catch (e) { }\n  }\n  return str;\n}\n\nfunction search(post){\n  var that = this.toLowerCase().replace(/\\.|,/g, '').trim();\n  var contains_space = (that.trim().indexOf(' ') !== -1);\n  var contains_male = (that.split(' ').some(item => (item == 'male')));\n  var post_concat = post.title.rendered.concat(' ' ,post.acf.gender, ' ' ,post.acf.age, ' ', post.acf.type).toLowerCase();\n  // console.log(post_concat);\n  var post_concat_no_gender = post.title.rendered.concat(' ' , ' ' ,post.acf.age).toLowerCase();\n  var current_post_is_male = (post.acf.gender == 'male');\n  // var products_types_arr = mass_replace(['female', 'male', 'children', 'adult'], that, '').trim();\n\n  if (contains_space) {\n    var array_of_keywords = that.split(' ');\n    if (contains_male) {\n      var array_of_keywords_without_male = remove_from_arr(array_of_keywords, 'male');\n      var cond = contains_every_of(array_of_keywords_without_male, post_concat_no_gender);\n      return ( cond && current_post_is_male );\n    } else {\n      var cond = contains_every_of(array_of_keywords, post_concat);\n      return cond;\n    }\n  } else {\n    if (contains_male) {\n      return current_post_is_male;\n    } else {\n      var cond = post_concat.indexOf( that ) !== -1;\n      return cond;\n    }\n  }\n}\n\nfunction contains_every_of(array, string) {\n  var bool_accum = 0;\n  for (var i = 0; i < array.length; i++) {\n    if(string.indexOf(array[i]) !== -1){ bool_accum++; }\n  }\n  if (bool_accum === (array.length)) {\n    return true;\n  } else { return false; }\n}\n\nfunction contains_any_of(array, string) {\n  for (var i = 0; i < array.length; i++) {\n    if(string.indexOf(array[i]) !== -1){\n      return true;\n     }\n  }\n  return false;\n}\n\nfunction remove_from_arr(array, string) {\n  for (var i = 0; i < array.length; i++) {\n    if(array[i] == string){ array.splice(i,1)}\n  }\n  return array;\n}\n\nexport default class extends Component {\n\n  componentDidMount(){\n    var that = this;\n    var  initial_s = (this.props.query.search) ? this.props.query.search : '';\n    if (initial_s != '') {\n      document.getElementById('search').value = initial_s;\n      this.setState({ search: initial_s });\n      that.forceUpdate();\n    }\n  }\n\n  updateSearch(event){\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  cleanSearch(){\n      this.setState({\n        search: '',\n        filters: ''\n      })\n  }\n\n  static async getInitialProps(context) {\n    const response = await axios.get( the_SITE_url + '/wp-json/wp/v2/posts')\n    return {\n      posts: response.data,\n      query: context.query\n    }\n  }\n\n  constructor(){\n    super();\n    this.state = {\n      search: ''\n    }\n  }\n\n  render() {\n\n    let filteredPosts =\n    (((this.props.query != null) && (this.state.search == '')) ?\n    this.props.posts.filter(  initial_search, this.props.query   ) :\n    this.props.posts.filter(  search,         this.state.search   )).\n    filter( search, ((this.props.query.filters) ? this.props.query.filters : '') );\n\n    return (\n      <Fragment>\n        <Head>\n          <title>Sport</title>\n          <meta name=\"description\" content=\"This is an example of a meta description. This will show up in search results.\" />\n          <Meta_inf/>\n        </Head>\n\n        <div className=\"page-wrapper\">\n\n        <section className=\"left\">\n            <Navigation onClick={this.cleanSearch.bind(this)}\n              value={this.state.search}\n              onChange={this.updateSearch.bind(this)}/>\n        </section>\n\n        <section className=\"right\">\n          <header>\n            <h2 className=\"products-top-description\">\n              <Link  href={{ pathname: '/products', query: {   gender: ['female', 'male'],      age : ['children','adult']  } }}>\n                <a href=\"\">\n                  Our products\n                </a>\n              </Link>\n            </h2>\n          </header>\n          <hr className=\"hr-products-divider\" />\n          <article className=\"wrapper-products\"\n            id=\"wrapper-inner-products\">\n            { filteredPosts &&\n              filteredPosts.\n              map( post => {\n                return (\n                  <div key={ post.id }\n                    className=\"wrapper-inner-products\">\n                    <Link href={ `/products/details/${ post.slug }` }>\n                    <div className=\"hover-helper\">Click to see details...</div>\n                    </Link>\n                    <Link href={ `/products/details/${ post.slug }` }>\n                      <a href={ `/products/details/${ post.slug }` }>\n                        <img src={ (post.acf.icon.sizes.medium) ? post.acf.icon.sizes.medium : '/static/loading.png' }\n                          alt=\"alt text\"\n                          className=\"post-thumb-image\"\n                          />\n                        <p>{ post.title.rendered }</p>\n                        <span> {post.acf.price} Â£ </span>\n                      </a>\n                    </Link>\n                  </div>\n                )\n              })\n            }\n          </article>\n        </section>\n\n      </div>\n\n    </Fragment>\n    )\n  }\n  // END OF RENDER\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;AAEA;;;;;;;AACA;AACA;;AADA;AACA;AACA;AACA;AAFA;AACA;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAEA;AAMA;AAIA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AACA;AADA;AAKA;AACA;AACA;AADA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAUA;AASA;AACA;;;;AA5GA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}